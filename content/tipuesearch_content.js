var tipuesearch = {"pages": [{'title': '首頁', 'text': '2021/5/7 第十一周 更新 \n 倉儲需要新增第一次與第二次分組的東西，開始進行整理。 \n 我的倉儲 \n 本學期應做事項: \n 分組: \n W2-W4 (3 Weeks): 二人一組 \n 組別網頁 \n W5-W9 (5 Weeks): 四人一組 \n 組別網頁 \n W10-W18 (9 Weeks): 八人一組 \n 組別網頁 \n \n', 'tags': '', 'url': '首頁.html'}, {'title': 'W5', 'text': '\n \n \n 組別(乙班) \n 時間 \n \n \n 1 \n 07:14 \n \n \n 2 \n 01:55 \n \n \n 3 \n 01:55 \n \n \n 4 \n 02:51 \n \n \n 5 \n 03:00 \n \n \n 6 \n 03:07 \n \n \n 7 \n 02:47 \n \n \n 8 \n 03:25 \n \n \n 9 \n 02:43 \n \n \n 10 \n 02:20 \n \n \n 11 \n 01:38 \n \n \n 12 \n 01:47 \n \n \n 13 \n 02:09 \n \n \n 14 \n 05:58 \n \n \n 15 \n 03:24 \n \n \n 16 \n 03:33 \n \n \n 17 \n 04:33 \n \n \n 18 \n 05:03 \n \n \n 19 \n 03:11 \n \n \n 20 \n 03:32 \n \n \n 21 \n 05:02 \n \n \n 22 \n 04:46 \n \n \n 23 \n 02:55 \n \n \n 24 \n 05:00 \n \n \n 25 \n 04:53 \n \n \n 26 \n 00:00 \n \n \n 27 \n 03:43 \n \n \n \n', 'tags': '', 'url': 'W5.html'}, {'title': '倉庫', 'text': '原始網站刪除的東西還有部分筆記在此 \n 備註:記得前往github自己的帳戶中 seeting/gitgub page裡面將 Branch修改為 master \n 此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 建立可快速給其他人上傳的倉儲方法: \n 於init中之IP="***.***.***.***"改為IP="::" \n ，並以ipconfig /all獲得IP即可使所有人進入 \n 在網站上面放置可下載連結的方法 \n 將檔案放進倉儲中，上傳後於倉儲找到檔案連結，右鍵點擊箭頭位置，按檢查獲得代碼，更改其網址，範例: https://github.com/40823233/cad2020/raw/master/download/40823233.ipt \n \n 倉儲複製(有子模組適用) \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n 這是還沒有設定使用者時的代碼。 \n git clone --recurse-submodules \xa0 https://github.com/40823233/cp2019.git \n 這是我的倉儲的複製方法。 \n 若資料遺失 可 使用gitcheckout .回復到上一版倉儲 \n 上傳三連 \n git add . \n git commit -m\xa0 "add repositere link" \n git push \n 然後打帳號密碼，如果中途有錯的話cmd上面會告訴你叫你打一些東西，好了之後重複上述動作應該就行了。 \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以git子模塊添加\xa0 \xa0 https://github.com/mdecourse/cmsimde \xa0 \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules \xa0 https://github.com/mdecourse/newcms.git \n https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n 數學符號與方程式 \n Inline math equations go in like so: \xa0 ω = d ϕ / d t ω = d ϕ / d t . Display math should get its own line and be put in in double-dollarsigns: \n I = ∫ ρ R 2 d V \n \n 於cad2020課程中所學到的軟體，程式: \n \n \n 1.錄影,截圖,筆記:ShaerX,zoomit. \n 2.繪圖軟體: NX, Solidworks, Inventor, Onshape, Solvespace \n 3.github程式組成: \n \n 2020cad:學習如何使用程式對各繪圖軟體繪出的圖進行大量複製並小幅度修改 \n 利用MARKDOWN 寫投影片 \n 以下利用 Markdown 格式展示 Python 程式碼: \n # use threading  and  subprocess to threading the make process\n import  os\n import  subprocess\n import  threading\n\ndef domake():\n\n     path  =  "../exposed/api/exposed" \n    ubuntu =  "../Ubuntu" \n\n    # create obj  path \n\n     if   not  os. path .exists( path + "/../obj" ):\n        os.makedirs( path + "/../obj" )\n\n    subprocess.call([ "make" ,  "clean" ], cwd= path )\n    subprocess.call( "make" , cwd= path )\n    subprocess.call([ "cp" ,  "{libslvs.so, _slvs.so, slvs.py}" , ubuntu], cwd= path )\n    subprocess.call([ "python3" ,  "circle_ex.py" ], cwd= path + "/" +ubuntu)\n\nmake = threading.Thread(target=domake)\nmake.start() \n 使用 iframe 導入影片 導入影片 template 導入結果如下 \n \n \n This is  https://github.com/mdecourse/cmstemplate \n 目前的 cmsimde 在編輯器下方新增一個 csave 按鈕, 意即 collabrative save, 當動態網際管理系統在多人同時維護登入維護網頁內容時, 編輯各頁面時段, 該頁面可能已經改版, 因此使用 csave 按鈕存檔時, 會導入當下最新的該頁面內容, 並試圖與編輯中的頁面內容進行合併. \n 使用 csave 按鈕存檔無法刪除頁面資料. \n 使用 Edit All 模式, 無法使用 csave 按鈕（尚未測試). \n \n', 'tags': '', 'url': '倉庫.html'}]};